"use strict";

const URL = require("../config/urls");


class ImageManagementResource {
  constructor(options) {
    this.apiClient = options.apiClient;
  }

  // GET /api/v1/images
  getImages(callback) {
    return this.apiClient._getRequest(URL.IMAGE_MANAGEMENT.IMAGES, callback);
  }

  // GET /api/v1/images/image/{id}
  getImageById(id, callback) {
    const formattedUrl = URL.IMAGE_MANAGEMENT.IMAGE_BY_ID.replace('{id}', id);
    return this.apiClient._getRequest(formattedUrl, callback);
  }

  // GET /api/v1/images/image/{id}/downscaled
  getImageDownscaledById(id, callback) {
    const formattedUrl = URL.IMAGE_MANAGEMENT.IMAGE_BY_ID_DOWNSCALED.replace('{id}', id);
    return this.apiClient._getRequest(formattedUrl, callback);
  }

  // GET /api/v1/images/tiles/{id}/{z}/{x}/{y}
  getImageTiles(id, z, x, y, callback) {
    const formattedUrl = URL.IMAGE_MANAGEMENT.IMAGE_TILES
      .replace('{id}', id)
      .replace('{z}', z)
      .replace('{x}', x)
      .replace('{y}', y);
    return this.apiClient._getRequest(formattedUrl, callback);
  }

  // DELETE /api/v1/images/{id}
  deleteImageById(id, callback) {
    const formattedUrl = URL.IMAGE_MANAGEMENT.IMAGE_BY_ID.replace('{id}', id);
    return this.apiClient._deleteRequest(formattedUrl, callback);
  }

  // GET /api/v1/images/{id}
  getImageDetailsById(id, callback) {
    const formattedUrl = URL.IMAGE_MANAGEMENT.IMAGES.replace('{id}', id);
    return this.apiClient._getRequest(URL.IMAGE_MANAGEMENT.IMAGES+'/'+id, callback);
  }

  // POST /api/v1/images/{id}/import
  postImageImport(id, callback) {
    const formattedUrl = URL.IMAGE_MANAGEMENT.IMPORT_IMAGE.replace('{id}', id);
    return this.apiClient._postRequest(formattedUrl, callback);
  }

  // POST /api/v1/images/{id}/upload
  postImageUpload(id, callback) {
    const formattedUrl = URL.IMAGE_MANAGEMENT.UPLOAD_IMAGE.replace('{id}', id);
    return this.apiClient._postRequest(formattedUrl, callback);
  }
}

  module.exports = ImageManagementResource;
  
  