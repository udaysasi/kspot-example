"use strict";

const URL = require("../config/urls");
class ClientDeviceResource {
    // DELETE /api/v1/devices
    deleteDevices(callback) {
      return this.apiClient._deleteRequest(URL.CLIENT_DEVICE_RESOURCE.DEVICES, callback);
    }
  
    // GET /api/v1/devices
    getDevices(callback) {
      return this.apiClient._getRequest(URL.CLIENT_DEVICE_RESOURCE.DEVICES, callback);
    }
  
    // POST /api/v1/devices
    postDevice(options, callback) {
      return this.apiClient._postRequest(URL.CLIENT_DEVICE_RESOURCE.DEVICES, options, callback);
    }
  
    // PUT /api/v1/devices
    putDevice(options, callback) {
      return this.apiClient._putRequest(URL.CLIENT_DEVICE_RESOURCE.DEVICES, options, callback);
    }
  
    // POST /api/v1/devices/bulk
    postBulkDevice(options, callback) {
      return this.apiClient._postRequest(URL.CLIENT_DEVICE_RESOURCE.BULK, options, callback);
    }
  
    // GET /api/v1/devices/csv-export
    getCsvExport(callback) {
      return this.apiClient._getRequest(URL.CLIENT_DEVICE_RESOURCE.DEVICES_CSV_EXPORT, callback);
    }
  
    // POST /api/v1/devices/csv-import
    postCsvImport(options, callback) {
      return this.apiClient._postRequest(URL.CLIENT_DEVICE_RESOURCE.CSV_IMPORT, options, callback);
    }
  
    // POST /api/v1/devices/email
    postDeviceEmail(options, callback) {
      return this.apiClient._postRequest(URL.CLIENT_DEVICE_RESOURCE.EMAIL, options, callback);
    }
  
    // POST /api/v1/devices/ezLinkCSVImport
    postEzLinkCsvImport(options, callback) {
      return this.apiClient._postRequest(URL.CLIENT_DEVICE_RESOURCE.LINK_CSV_IMPORT, options, callback);
    }
  
    // DELETE /api/v1/devices/history/{id}
    deleteDeviceHistoryById(deviceId, callback) {
      const formattedUrl = URL.CLIENT_DEVICE_RESOURCE.DEVICE_HISTORY_BY_ID.replace('{id}', deviceId);
      return this.apiClient._deleteRequest(formattedUrl, callback);
    }
  
}
  module.exports = ClientDeviceResource;
  