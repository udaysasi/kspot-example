"use strict";
const URL = require('../config/urls');

class HumanAnalyticsResource {

    constructor(options) {
        this.apiClient = options.apiClient;
    }

    getAllHumans(callback) {
        return this.apiClient._getRequest(URL.HUMANS.GETALL, callback);
    }

    getHumanById(id, callback) {
        const formattedUrl = URL.HUMANS.GET.replace('{id}', id);
        return this.apiClient._getRequest(formattedUrl, callback);
    }

    createHumanIndex(indexName, callback) {
        const formattedUrl = URL.HUMANS.CREATEINDEX.replace('{indexName}', indexName);
        return this.apiClient._getRequest(formattedUrl, callback);
    }

    deleteHuman(id, callback) {
        const formattedUrl = URL.HUMANS.DELETE.replace('{id}', id);
        return this.apiClient._deleteRequest(formattedUrl, callback);
    }

    updateHuman(id, options, callback) {
        const formattedUrl = URL.HUMANS.HUMANS.replace('{id}', id);
        return this.apiClient._putRequest(formattedUrl, options, callback);
    }

    bulkUpdateStatus(options, callback) {
        return this.apiClient._putRequest(URL.HUMANS.BULKSTATUSUPDATE, options, callback);
    }

    findByUniqueId(uniqueId, callback) {
        const formattedUrl = URL.HUMANS.FINDBYUNIQUEID.replace('{uniqueId}', uniqueId);
        return this.apiClient._getRequest(formattedUrl, callback);
    }

    // Add other methods as needed based on your requirements
}

module.exports = HumanAnalyticsResource;
